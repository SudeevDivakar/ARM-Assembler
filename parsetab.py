
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ADDRESS AMODE COMMA COND CR DIRECTIVE EM HYPHEN IMMEDIATE LABEL LB LF MNE NUMBER RB REGISTER RF RRX SHIFT_ACTION STRING ST_REG ST_REG_F S_FLAG\n    start : LABEL Labels DIRECTIVE STRING Strings\n    start : LABEL Labels DIRECTIVE NUMBER Numbers\n    start : Labels\n    start : DIRECTIVE\n    Labels : EMPTY\n    Labels : LABEL Labels\n    Numbers : EMPTY\n    Numbers : COMMA NUMBER Numbers\n    Strings : EMPTY\n    Strings : COMMA STRING Strings\n    EMPTY :\n    start : Labels Instruction OperandsInstruction : MNE Condition Flag Mode\n    Condition : EMPTY\n    Condition : COND\n    \n    Flag : EMPTY\n    Flag : S_FLAG\n    \n    Mode : EMPTY\n    Mode : AMODE\n    \n    Operands : Case_1\n    Operands : Case_2\n    Operands : Case_3\n    Operands : Case_4\n    Operands : Case_5\n    Operands : Case_6\n    Operands : Case_7\n    Operands : Case_8\n    Operands : Case_9\n    Operands : Case_10\n    Operands : Case_11\n    Operands : Case_12\n    Operands : Case_13\n    Operands : Case_14\n    Operands : Case_15\n    Operands : Case_16\n    Operands : Case_17\n    Operands : Case_18\n    Operands : Case_19\n    Case_1 : REGISTER COMMA REGISTER COMMA REGISTER COMMA REGISTERCase_2 : REGISTER COMMA REGISTER COMMA REGISTER ShiftCase_3 : REGISTER COMMA REGISTER COMMA IMMEDIATECase_4 : REGISTER COMMA REGISTER ShiftCase_5 : REGISTER COMMA IMMEDIATECase_6 : REGISTER COMMA ST_REGCase_7 : ST_REG_F COMMA REGISTERCase_8 : ST_REG_F COMMA IMMEDIATECase_9 : REGISTERCase_10 : IMMEDIATECase_11 : NUMBERCase_12 : ADDRESS\n    Case_13 : REGISTER COMMA LF Reg_List RF Op_Mod\n    Case_13 : REGISTER EM COMMA LF Reg_List RF Op_Mod\n    Case_14 : REGISTER COMMA LB REGISTER COMMA Reg_Shift_Imm RB Write_BackCase_15 : REGISTER COMMA LB REGISTER COMMA IMMEDIATE RB Write_BackCase_16 : REGISTER COMMA LB REGISTER RB Write_BackCase_17 : REGISTER COMMA LB REGISTER RB COMMA IMMEDIATECase_18 : REGISTER COMMA LB REGISTER RB COMMA Reg_Shift_ImmCase_19 : REGISTER COMMA ADDRESS\n    Write_Back : EMPTY\n    Write_Back : EM\n    Reg_Shift_Imm : Negative REGISTER Shift_Imm\n    Negative : EMPTY\n    Negative : HYPHEN\n    \n    Shift_Imm : EMPTY\n    Shift_Imm : COMMA SHIFT_ACTION IMMEDIATE\n    Shift_Imm : COMMA RRX\n    \n    Reg_List : REGISTER HYPHEN REGISTER\n    Reg_List : REGISTER Registers\n    \n    Registers : EMPTY\n    Registers : Registers COMMA REGISTER\n    \n    Op_Mod : EMPTY\n    Op_Mod : CR\n    \n    Shift : EMPTY\n    Shift : COMMA SHIFT_ACTION REGISTER\n    \n    Shift : COMMA SHIFT_ACTION IMMEDIATE\n    Shift : COMMA RRX\n    '
    
_lr_action_items = {'LABEL':([0,2,6,],[2,6,6,]),'DIRECTIVE':([0,2,5,6,7,10,],[4,-11,-5,-11,11,-6,]),'MNE':([0,2,3,5,6,7,10,],[-11,-11,9,-5,-11,-6,-6,]),'$end':([0,1,2,3,4,5,6,7,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,35,36,40,41,48,49,51,52,54,55,56,59,61,62,66,67,69,70,75,76,77,78,80,84,86,89,90,91,94,95,96,103,104,105,106,107,109,110,111,112,113,114,115,116,117,118,121,122,],[-11,0,-11,-3,-4,-5,-11,-6,-6,-12,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-47,-48,-49,-50,-11,-11,-1,-9,-2,-7,-11,-43,-44,-58,-45,-46,-11,-11,-42,-73,-10,-8,-11,-41,-76,-11,-11,-40,-74,-75,-51,-71,-72,-55,-59,-60,-11,-39,-11,-11,-11,-56,-57,-52,-53,-54,-61,-64,-66,-65,]),'REGISTER':([8,9,37,38,39,42,44,45,46,47,57,58,63,64,65,68,74,79,81,85,88,93,99,100,101,102,],[32,-11,-11,-14,-15,54,61,-11,-16,-17,71,73,-13,-18,-19,77,71,90,92,-11,107,108,111,-62,-63,-11,]),'ST_REG_F':([8,9,37,38,39,45,46,47,63,64,65,],[34,-11,-11,-14,-15,-11,-16,-17,-13,-18,-19,]),'IMMEDIATE':([8,9,37,38,39,42,44,45,46,47,63,64,65,68,79,85,102,120,],[33,-11,-11,-14,-15,55,62,-11,-16,-17,-13,-18,-19,78,91,98,112,122,]),'NUMBER':([8,9,11,37,38,39,45,46,47,53,63,64,65,],[35,-11,41,-11,-14,-15,-11,-16,-17,67,-13,-18,-19,]),'ADDRESS':([8,9,37,38,39,42,45,46,47,63,64,65,],[36,-11,-11,-14,-15,59,-11,-16,-17,-13,-18,-19,]),'COND':([9,],[39,]),'S_FLAG':([9,37,38,39,],[-11,47,-14,-15,]),'AMODE':([9,37,38,39,45,46,47,],[-11,-11,-14,-15,65,-16,-17,]),'STRING':([11,50,],[40,66,]),'COMMA':([32,34,40,41,43,54,66,67,71,73,77,82,83,86,108,111,],[42,44,50,53,60,68,50,53,-11,85,88,93,-69,102,-70,119,]),'EM':([32,86,109,110,],[43,105,105,105,]),'ST_REG':([42,],[56,]),'LF':([42,60,],[57,74,]),'LB':([42,],[58,]),'SHIFT_ACTION':([68,88,119,],[79,79,120,]),'RRX':([68,88,119,],[80,80,121,]),'HYPHEN':([71,85,102,],[81,101,101,]),'RF':([71,72,82,83,87,92,108,],[-11,84,-68,-69,106,-67,-70,]),'RB':([73,97,98,111,117,118,121,122,],[86,109,110,-11,-61,-64,-66,-65,]),'CR':([84,106,],[96,96,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'Labels':([0,2,6,],[3,7,10,]),'EMPTY':([0,2,6,9,37,40,41,45,54,66,67,71,77,84,85,86,102,106,109,110,111,],[5,5,5,38,46,49,52,64,70,49,52,83,70,95,100,104,100,95,104,104,118,]),'Instruction':([3,],[8,]),'Operands':([8,],[12,]),'Case_1':([8,],[13,]),'Case_2':([8,],[14,]),'Case_3':([8,],[15,]),'Case_4':([8,],[16,]),'Case_5':([8,],[17,]),'Case_6':([8,],[18,]),'Case_7':([8,],[19,]),'Case_8':([8,],[20,]),'Case_9':([8,],[21,]),'Case_10':([8,],[22,]),'Case_11':([8,],[23,]),'Case_12':([8,],[24,]),'Case_13':([8,],[25,]),'Case_14':([8,],[26,]),'Case_15':([8,],[27,]),'Case_16':([8,],[28,]),'Case_17':([8,],[29,]),'Case_18':([8,],[30,]),'Case_19':([8,],[31,]),'Condition':([9,],[37,]),'Flag':([37,],[45,]),'Strings':([40,66,],[48,75,]),'Numbers':([41,67,],[51,76,]),'Mode':([45,],[63,]),'Shift':([54,77,],[69,89,]),'Reg_List':([57,74,],[72,87,]),'Registers':([71,],[82,]),'Op_Mod':([84,106,],[94,114,]),'Reg_Shift_Imm':([85,102,],[97,113,]),'Negative':([85,102,],[99,99,]),'Write_Back':([86,109,110,],[103,115,116,]),'Shift_Imm':([111,],[117,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> LABEL Labels DIRECTIVE STRING Strings','start',5,'p_start_0','Assembler.py',356),
  ('start -> LABEL Labels DIRECTIVE NUMBER Numbers','start',5,'p_start_0','Assembler.py',357),
  ('start -> Labels','start',1,'p_start_0','Assembler.py',358),
  ('start -> DIRECTIVE','start',1,'p_start_0','Assembler.py',359),
  ('Labels -> EMPTY','Labels',1,'p_start_0','Assembler.py',360),
  ('Labels -> LABEL Labels','Labels',2,'p_start_0','Assembler.py',361),
  ('Numbers -> EMPTY','Numbers',1,'p_start_0','Assembler.py',362),
  ('Numbers -> COMMA NUMBER Numbers','Numbers',3,'p_start_0','Assembler.py',363),
  ('Strings -> EMPTY','Strings',1,'p_start_0','Assembler.py',364),
  ('Strings -> COMMA STRING Strings','Strings',3,'p_start_0','Assembler.py',365),
  ('EMPTY -> <empty>','EMPTY',0,'p_start_0','Assembler.py',366),
  ('start -> Labels Instruction Operands','start',3,'p_start_1','Assembler.py',372),
  ('Instruction -> MNE Condition Flag Mode','Instruction',4,'p_Instruction','Assembler.py',379),
  ('Condition -> EMPTY','Condition',1,'p_Condition','Assembler.py',400),
  ('Condition -> COND','Condition',1,'p_Condition','Assembler.py',401),
  ('Flag -> EMPTY','Flag',1,'p_Flag','Assembler.py',411),
  ('Flag -> S_FLAG','Flag',1,'p_Flag','Assembler.py',412),
  ('Mode -> EMPTY','Mode',1,'p_Mode','Assembler.py',422),
  ('Mode -> AMODE','Mode',1,'p_Mode','Assembler.py',423),
  ('Operands -> Case_1','Operands',1,'p_Operands','Assembler.py',433),
  ('Operands -> Case_2','Operands',1,'p_Operands','Assembler.py',434),
  ('Operands -> Case_3','Operands',1,'p_Operands','Assembler.py',435),
  ('Operands -> Case_4','Operands',1,'p_Operands','Assembler.py',436),
  ('Operands -> Case_5','Operands',1,'p_Operands','Assembler.py',437),
  ('Operands -> Case_6','Operands',1,'p_Operands','Assembler.py',438),
  ('Operands -> Case_7','Operands',1,'p_Operands','Assembler.py',439),
  ('Operands -> Case_8','Operands',1,'p_Operands','Assembler.py',440),
  ('Operands -> Case_9','Operands',1,'p_Operands','Assembler.py',441),
  ('Operands -> Case_10','Operands',1,'p_Operands','Assembler.py',442),
  ('Operands -> Case_11','Operands',1,'p_Operands','Assembler.py',443),
  ('Operands -> Case_12','Operands',1,'p_Operands','Assembler.py',444),
  ('Operands -> Case_13','Operands',1,'p_Operands','Assembler.py',445),
  ('Operands -> Case_14','Operands',1,'p_Operands','Assembler.py',446),
  ('Operands -> Case_15','Operands',1,'p_Operands','Assembler.py',447),
  ('Operands -> Case_16','Operands',1,'p_Operands','Assembler.py',448),
  ('Operands -> Case_17','Operands',1,'p_Operands','Assembler.py',449),
  ('Operands -> Case_18','Operands',1,'p_Operands','Assembler.py',450),
  ('Operands -> Case_19','Operands',1,'p_Operands','Assembler.py',451),
  ('Case_1 -> REGISTER COMMA REGISTER COMMA REGISTER COMMA REGISTER','Case_1',7,'p_Case_1','Assembler.py',457),
  ('Case_2 -> REGISTER COMMA REGISTER COMMA REGISTER Shift','Case_2',6,'p_Case_2','Assembler.py',462),
  ('Case_3 -> REGISTER COMMA REGISTER COMMA IMMEDIATE','Case_3',5,'p_Case_3','Assembler.py',467),
  ('Case_4 -> REGISTER COMMA REGISTER Shift','Case_4',4,'p_Case_4','Assembler.py',472),
  ('Case_5 -> REGISTER COMMA IMMEDIATE','Case_5',3,'p_Case_5','Assembler.py',477),
  ('Case_6 -> REGISTER COMMA ST_REG','Case_6',3,'p_Case_6','Assembler.py',482),
  ('Case_7 -> ST_REG_F COMMA REGISTER','Case_7',3,'p_Case_7','Assembler.py',487),
  ('Case_8 -> ST_REG_F COMMA IMMEDIATE','Case_8',3,'p_Case_8','Assembler.py',492),
  ('Case_9 -> REGISTER','Case_9',1,'p_Case_9','Assembler.py',497),
  ('Case_10 -> IMMEDIATE','Case_10',1,'p_Case_10','Assembler.py',502),
  ('Case_11 -> NUMBER','Case_11',1,'p_Case_11','Assembler.py',507),
  ('Case_12 -> ADDRESS','Case_12',1,'p_Case_12','Assembler.py',512),
  ('Case_13 -> REGISTER COMMA LF Reg_List RF Op_Mod','Case_13',6,'p_Case_13','Assembler.py',520),
  ('Case_13 -> REGISTER EM COMMA LF Reg_List RF Op_Mod','Case_13',7,'p_Case_13','Assembler.py',521),
  ('Case_14 -> REGISTER COMMA LB REGISTER COMMA Reg_Shift_Imm RB Write_Back','Case_14',8,'p_Case_14','Assembler.py',532),
  ('Case_15 -> REGISTER COMMA LB REGISTER COMMA IMMEDIATE RB Write_Back','Case_15',8,'p_Case_15','Assembler.py',541),
  ('Case_16 -> REGISTER COMMA LB REGISTER RB Write_Back','Case_16',6,'p_Case_16','Assembler.py',551),
  ('Case_17 -> REGISTER COMMA LB REGISTER RB COMMA IMMEDIATE','Case_17',7,'p_Case_17','Assembler.py',560),
  ('Case_18 -> REGISTER COMMA LB REGISTER RB COMMA Reg_Shift_Imm','Case_18',7,'p_Case_18','Assembler.py',565),
  ('Case_19 -> REGISTER COMMA ADDRESS','Case_19',3,'p_Case_19','Assembler.py',570),
  ('Write_Back -> EMPTY','Write_Back',1,'p_Write_Back','Assembler.py',578),
  ('Write_Back -> EM','Write_Back',1,'p_Write_Back','Assembler.py',579),
  ('Reg_Shift_Imm -> Negative REGISTER Shift_Imm','Reg_Shift_Imm',3,'p_Reg_Shift_Imm','Assembler.py',588),
  ('Negative -> EMPTY','Negative',1,'p_Negative','Assembler.py',596),
  ('Negative -> HYPHEN','Negative',1,'p_Negative','Assembler.py',597),
  ('Shift_Imm -> EMPTY','Shift_Imm',1,'p_Shift_Imm','Assembler.py',607),
  ('Shift_Imm -> COMMA SHIFT_ACTION IMMEDIATE','Shift_Imm',3,'p_Shift_Imm','Assembler.py',608),
  ('Shift_Imm -> COMMA RRX','Shift_Imm',2,'p_Shift_Imm','Assembler.py',609),
  ('Reg_List -> REGISTER HYPHEN REGISTER','Reg_List',3,'p_Reg_List','Assembler.py',634),
  ('Reg_List -> REGISTER Registers','Reg_List',2,'p_Reg_List','Assembler.py',635),
  ('Registers -> EMPTY','Registers',1,'p_Registers','Assembler.py',650),
  ('Registers -> Registers COMMA REGISTER','Registers',3,'p_Registers','Assembler.py',651),
  ('Op_Mod -> EMPTY','Op_Mod',1,'p_Op_Mod','Assembler.py',661),
  ('Op_Mod -> CR','Op_Mod',1,'p_Op_Mod','Assembler.py',662),
  ('Shift -> EMPTY','Shift',1,'p_Shift_0','Assembler.py',672),
  ('Shift -> COMMA SHIFT_ACTION REGISTER','Shift',3,'p_Shift_0','Assembler.py',673),
  ('Shift -> COMMA SHIFT_ACTION IMMEDIATE','Shift',3,'p_Shift_1','Assembler.py',683),
  ('Shift -> COMMA RRX','Shift',2,'p_Shift_1','Assembler.py',684),
]
